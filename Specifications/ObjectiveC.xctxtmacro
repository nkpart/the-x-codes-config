// $ defaults write com.apple.Xcode XCCodeSenseFormattingOptions -dict FunctionBlockSeparator " " PreMethodDeclSpacing "" PreMethodTypeSpacing " "

(
	{
		Identifier = objc.hello;
		BasedOn = objc;
		IsMenuItem = YES;
		Name = "Hello";
		TextString = "Hello, Xcode!";
		CompletionPrefix = "hello";
		IncludeContexts = ("xcode.lang.objc");
	},

// MARK: methods templates
        {
            Identifier = objc.init;
            BasedOn = objc;
            IsMenuItem = YES;
            Name = "init Definition";
            TextString = "-$(PreMethodTypeSpacing)(id)$(PreMethodDeclSpacing)init$(FunctionBlockSeparator){\n\tif$(PreExpressionsSpacing)(($(InExpressionsSpacing)self = [super init]$(InExpressionsSpacing)))$(BlockSeparator){\n\t\t<#!initializations!#>\n\t}\n\treturn self;\n}\n";
            CompletionPrefix = init;
            IncludeContexts = ( "xcode.lang.objc.implementation" );
            ExcludeContexts = ( "xcode.lang.objc.block" );
        },

        {
            Identifier = objc.ini;
            BasedOn = objc;
            IsMenuItem = YES;
            Name = "init method insides";
            TextString = "if$(PreExpressionsSpacing)(($(InExpressionsSpacing)self = [super init]$(InExpressionsSpacing)))$(BlockSeparator){\n\t<#!initializations!#>\n}\nreturn self;";
            CompletionPrefix = ini;
            IncludeContexts = ( "xcode.lang.objc.block" );
        },

        {
            Identifier = objc.category;
            BasedOn = objc;
            IsMenuItem = YES;
            Name = "categories";
            TextString = "@interface <#!what!#> (<#ext#>)\n<#statements#>\n@end\n";
            CompletionPrefix = ext;
            IncludeContexts = ( "xcode.lang.objc" );
            ExcludeContexts = ( "xcode.lang.objc.block", "xcode.lang.objc.implementation" );
        },
        
        {
            Identifier = objc.viewDidLoad;
            BasedOn = objc;
            IsMenuItem = YES;
            Name = "viewDidLoad Definition";
            TextString = "-$(PreMethodTypeSpacing)(void)$(PreMethodDeclSpacing)viewDidLoad$(FunctionBlockSeparator){\n\t[super viewDidLoad];\n\t<#!statements!#>\n}\n";
            CompletionPrefix = vdl;
            IncludeContexts = ( "xcode.lang.objc.implementation" );
            ExcludeContexts = ( "xcode.lang.objc.block" );
        },
        
        {
            Identifier = objc.viewWillAppear;
            BasedOn = objc;
            IsMenuItem = YES;
            Name = "viewWillAppear Definition";
            TextString = "-$(PreMethodTypeSpacing)(void)$(PreMethodDeclSpacing)viewWillAppear:(BOOL)animated$(FunctionBlockSeparator){\n\t[super viewWillAppear:animated];\n\t<#!statements!#>\n}\n";
            CompletionPrefix = vwa;
            IncludeContexts = ( "xcode.lang.objc.implementation" );
            ExcludeContexts = ( "xcode.lang.objc.block" );
        },

        {
            Identifier = objc.viewDidAppear;
            BasedOn = objc;
            IsMenuItem = YES;
            Name = "viewDidAppear Definition";
            TextString = "-$(PreMethodTypeSpacing)(void)$(PreMethodDeclSpacing)viewDidAppear:(BOOL)animated$(FunctionBlockSeparator){\n\t[super viewDidAppear:animated];\n\t<#!statements!#>\n}\n";
            CompletionPrefix = vda;
            IncludeContexts = ( "xcode.lang.objc.implementation" );
            ExcludeContexts = ( "xcode.lang.objc.block" );
        },

        {
            Identifier = objc.viewWillDisappear;
            BasedOn = objc;
            IsMenuItem = YES;
            Name = "viewWillDisappear Definition";
            TextString = "-$(PreMethodTypeSpacing)(void)$(PreMethodDeclSpacing)viewWillDisappear:(BOOL)animated$(FunctionBlockSeparator){\n\t[super viewWillDisappear:animated];\n\t<#!statements!#>\n}\n";
            CompletionPrefix = vwd;
            IncludeContexts = ( "xcode.lang.objc.implementation" );
            ExcludeContexts = ( "xcode.lang.objc.block" );
        },

        {
            Identifier = objc.viewDidDisappear;
            BasedOn = objc;
            IsMenuItem = YES;
            Name = "viewDidDisappear Definition";
            TextString = "-$(PreMethodTypeSpacing)(void)$(PreMethodDeclSpacing)viewDidDisappear:(BOOL)animated$(FunctionBlockSeparator){\n\t[super viewDidDisappear:animated];\n\t<#!statements!#>\n}\n";
            CompletionPrefix = vdd;
            IncludeContexts = ( "xcode.lang.objc.implementation" );
            ExcludeContexts = ( "xcode.lang.objc.block" );
        },

        {
            Identifier = objc.bracket;
            BasedOn = objc;
            IsMenuItem = YES;
            Name = "Bracket Expression";
            TextString = "[<#!expression!#> <#two#>]";
        }
)
